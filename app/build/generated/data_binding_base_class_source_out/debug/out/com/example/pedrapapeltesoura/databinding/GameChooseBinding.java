// Generated by view binder compiler. Do not edit!
package com.example.pedrapapeltesoura.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.pedrapapeltesoura.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class GameChooseBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView buttonLizard;

  @NonNull
  public final ImageView buttonPaper;

  @NonNull
  public final ImageView buttonRock;

  @NonNull
  public final ImageView buttonScissor;

  @NonNull
  public final ImageView buttonSpock;

  @NonNull
  public final LinearLayout firstLinear;

  @NonNull
  public final TextView textBox;

  @NonNull
  public final ToolbarBinding toolbarIn;

  private GameChooseBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView buttonLizard,
      @NonNull ImageView buttonPaper, @NonNull ImageView buttonRock,
      @NonNull ImageView buttonScissor, @NonNull ImageView buttonSpock,
      @NonNull LinearLayout firstLinear, @NonNull TextView textBox,
      @NonNull ToolbarBinding toolbarIn) {
    this.rootView = rootView;
    this.buttonLizard = buttonLizard;
    this.buttonPaper = buttonPaper;
    this.buttonRock = buttonRock;
    this.buttonScissor = buttonScissor;
    this.buttonSpock = buttonSpock;
    this.firstLinear = firstLinear;
    this.textBox = textBox;
    this.toolbarIn = toolbarIn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static GameChooseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static GameChooseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.game_choose, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static GameChooseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonLizard;
      ImageView buttonLizard = ViewBindings.findChildViewById(rootView, id);
      if (buttonLizard == null) {
        break missingId;
      }

      id = R.id.buttonPaper;
      ImageView buttonPaper = ViewBindings.findChildViewById(rootView, id);
      if (buttonPaper == null) {
        break missingId;
      }

      id = R.id.buttonRock;
      ImageView buttonRock = ViewBindings.findChildViewById(rootView, id);
      if (buttonRock == null) {
        break missingId;
      }

      id = R.id.buttonScissor;
      ImageView buttonScissor = ViewBindings.findChildViewById(rootView, id);
      if (buttonScissor == null) {
        break missingId;
      }

      id = R.id.buttonSpock;
      ImageView buttonSpock = ViewBindings.findChildViewById(rootView, id);
      if (buttonSpock == null) {
        break missingId;
      }

      id = R.id.firstLinear;
      LinearLayout firstLinear = ViewBindings.findChildViewById(rootView, id);
      if (firstLinear == null) {
        break missingId;
      }

      id = R.id.textBox;
      TextView textBox = ViewBindings.findChildViewById(rootView, id);
      if (textBox == null) {
        break missingId;
      }

      id = R.id.toolbarIn;
      View toolbarIn = ViewBindings.findChildViewById(rootView, id);
      if (toolbarIn == null) {
        break missingId;
      }
      ToolbarBinding binding_toolbarIn = ToolbarBinding.bind(toolbarIn);

      return new GameChooseBinding((ConstraintLayout) rootView, buttonLizard, buttonPaper,
          buttonRock, buttonScissor, buttonSpock, firstLinear, textBox, binding_toolbarIn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
